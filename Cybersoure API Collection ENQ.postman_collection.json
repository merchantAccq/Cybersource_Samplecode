{
	"info": {
		"_postman_id": "9e12b13e-f454-4d96-a10f-190b10596d64",
		"name": "Cybersoure API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18921167"
	},
	"item": [
		{
			"name": "Void a Payment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "v-c-merchant-id",
						"value": "{{CYBERSOURCE.v-c-merchant-id}}"
					},
					{
						"key": "Date",
						"value": "{{current-date}}"
					},
					{
						"key": "Host",
						"value": "{{CYBERSOURCE.ENVIRONMENT}}"
					},
					{
						"key": "Digest",
						"value": "{{computed-digest}}"
					},
					{
						"key": "Signature",
						"value": "{{httpsig}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"clientReferenceInformation\": {\r\n    \"code\": \"1691312008058\"\r\n  }\r\n}"
				},
				"url": {
					"raw": "https://{{CYBERSOURCE.ENVIRONMENT}}/pts/v2/payments/6995145163146343004990/voids",
					"protocol": "https",
					"host": [
						"{{CYBERSOURCE.ENVIRONMENT}}"
					],
					"path": [
						"pts",
						"v2",
						"payments",
						"6995145163146343004990",
						"voids"
					]
				}
			},
			"response": []
		},
		{
			"name": "Refund",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "v-c-merchant-id",
						"value": "{{CYBERSOURCE.v-c-merchant-id}}"
					},
					{
						"key": "Date",
						"value": "{{current-date}}"
					},
					{
						"key": "Host",
						"value": "{{CYBERSOURCE.ENVIRONMENT}}"
					},
					{
						"key": "Digest",
						"value": "{{computed-digest}}"
					},
					{
						"key": "Signature",
						"value": "{{httpsig}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"clientReferenceInformation\": {\r\n    \"code\": \"Refund123456\"\r\n  },\r\n  \"orderInformation\": {\r\n    \"amountDetails\": {\r\n      \"totalAmount\": \"1.00\",\r\n      \"currency\": \"BDT\"\r\n    }\r\n  }\r\n}"
				},
				"url": {
					"raw": "https://{{CYBERSOURCE.ENVIRONMENT}}/pts/v2/payments/6872449902286211203262/refunds",
					"protocol": "https",
					"host": [
						"{{CYBERSOURCE.ENVIRONMENT}}"
					],
					"path": [
						"pts",
						"v2",
						"payments",
						"6872449902286211203262",
						"refunds"
					]
				}
			},
			"response": []
		},
		{
			"name": "TSS Search",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "v-c-merchant-id",
						"value": "{{CYBERSOURCE.v-c-merchant-id}}",
						"type": "text"
					},
					{
						"key": "Date",
						"value": "{{current-date}}",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{CYBERSOURCE.ENVIRONMENT}}",
						"type": "text"
					},
					{
						"key": "Digest",
						"value": "{{computed-digest}}",
						"type": "text"
					},
					{
						"key": "Signature",
						"value": "{{httpsig}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"name": "Content-Type",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"save\": \"false\",\n\t\"name\": \"MRN\",\n\t\"timezone\": \"America/Chicago\",\n\t\"query\": \"id:7012365119126764904953\",\n    \"query\": \"clientReferenceInformation.code:TC50171_3\",\n\t\"offset\": 0,\n\t\"limit\": 100,\n\t\"sort\": \"id:asc,submitTimeUtc:asc\"\n}"
				},
				"url": {
					"raw": "https://{{CYBERSOURCE.ENVIRONMENT}}/tss/v2/searches",
					"protocol": "https",
					"host": [
						"{{CYBERSOURCE.ENVIRONMENT}}"
					],
					"path": [
						"tss",
						"v2",
						"searches"
					]
				}
			},
			"response": []
		},
		{
			"name": "Transaction Detail",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "v-c-merchant-id",
						"value": "{{CYBERSOURCE.v-c-merchant-id}}",
						"type": "text"
					},
					{
						"key": "Date",
						"value": "{{current-date}}",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{CYBERSOURCE.ENVIRONMENT}}",
						"type": "text"
					},
					{
						"key": "Signature",
						"value": "{{httpsig}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{CYBERSOURCE.ENVIRONMENT}}/tss/v2/transactions/6781814989406162904951",
					"protocol": "https",
					"host": [
						"{{CYBERSOURCE.ENVIRONMENT}}"
					],
					"path": [
						"tss",
						"v2",
						"transactions",
						"6781814989406162904951"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reversal",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "v-c-merchant-id",
						"value": "testrest"
					},
					{
						"key": "Date",
						"value": "{{current-date}}"
					},
					{
						"key": "Host",
						"value": "apitest.cybersource.com"
					},
					{
						"key": "Digest",
						"value": "{{computed-digest}}"
					},
					{
						"key": "Signature",
						"value": "{{httpsig}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"clientReferenceInformation\": {\r\n    \"code\": \"TC50171_3\"\r\n  },\r\n  \"reversalInformation\": {\r\n    \"reason\": \"testing\",\r\n    \"amountDetails\": {\r\n      \"totalAmount\": \"102.00\"\r\n    }\r\n  }\r\n}"
				},
				"url": {
					"raw": "https://{{CYBERSOURCE.ENVIRONMENT}}/pts/v2/payments/6533006972906618003005/reversals",
					"protocol": "https",
					"host": [
						"{{CYBERSOURCE.ENVIRONMENT}}"
					],
					"path": [
						"pts",
						"v2",
						"payments",
						"6533006972906618003005",
						"reversals"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"function replaceVariables(text) {",
					"    var regex = /\\{\\{([^{}]*)\\}\\}/g;",
					"    var match = regex.exec(text);",
					"    if (match !== null) {",
					"      var globalVar = postman.getGlobalVariable(match[1]);",
					"      var localVar = postman.getEnvironmentVariable(match[1]);",
					"      var replace = globalVar;",
					"      if(localVar != null) {",
					"          replace = localVar;",
					"      }",
					"      text = text.replace(\"{{\" + match[1] + \"}}\", replace);",
					"      return replaceVariables(text);",
					"    }",
					"    return text;",
					"}",
					"",
					"function computeHttpSignature(config, headerHash) {",
					"  var template = 'keyid=\"${keyid}\", algorithm=\"${algorithm}\", headers=\"${headers}\", signature=\"${signature}\"',",
					"      sig = template;",
					"",
					"  // compute sig here",
					"  var signingBase = '';",
					"  config.headers.forEach(function(h){",
					"    if (signingBase !== '') { signingBase += '\\n'; }",
					"    signingBase += h.toLowerCase() + \": \" + headerHash[h];",
					"  });",
					"",
					"  var hashf = (function() {",
					"      switch (config.algorithm) {",
					"        // case 'hmac-sha1': return CryptoJS.HmacSHA1;",
					"        case 'SHA256withRSA': return CryptoJS.HmacSHA256;",
					"        // case 'hmac-sha512': return CryptoJS.HmacSHA512;",
					"        default : return CryptoJS.HmacSHA256;",
					"      }",
					"    }());",
					"",
					"  postman.setEnvironmentVariable(\"signingBase\", signingBase);",
					"",
					"  var words = CryptoJS.enc.Base64.parse(config.secretkey);",
					"  var reword = CryptoJS.enc.Base64.stringify(words)",
					"",
					"  var hash = hashf(signingBase, words);",
					"  var signatureOptions = {",
					"        keyid : config.keyid,",
					"        algorithm: config.algorithm,",
					"        headers: config.headers,",
					"        signature : CryptoJS.enc.Base64.stringify(hash)",
					"      };",
					"",
					"  // build sig string here",
					"  Object.keys(signatureOptions).forEach(function(key) {",
					"    var pattern = \"${\" + key + \"}\",",
					"        value = (typeof signatureOptions[key] != 'string') ? signatureOptions[key].join(' ') : signatureOptions[key];",
					"    sig = sig.replace(pattern, value);",
					"  });",
					"",
					"  return sig;",
					"}",
					"",
					"",
					"var curDate = new Date().toGMTString();",
					"",
					"var requestUri = replaceVariables(request.url.trim());",
					"targetUrl = requestUri.replace(new RegExp('^https?://[^/]+/'),'/'); // strip hostname",
					"",
					"    //hostname",
					"var method = request.method.toLowerCase();",
					"",
					"",
					"postman.setEnvironmentVariable(\"request.data\", replaceVariables(request.data));",
					"var sha256digest = CryptoJS.SHA256(replaceVariables(request.data));",
					"//var utfsha256digest = CryptoJS.enc.Utf8.parse(sha256digest);",
					"var base64sha256 = CryptoJS.enc.Base64.stringify(sha256digest);",
					"var computedDigest = 'SHA-256=' + base64sha256;",
					"var postHeaderHash = {",
					"      host : postman.getEnvironmentVariable(\"CYBERSOURCE.ENVIRONMENT\"),",
					"      date : curDate,",
					"      'request-target' : method + ' ' + targetUrl,",
					"      digest : computedDigest,",
					"      \"v-c-merchant-id\" : postman.getEnvironmentVariable(\"CYBERSOURCE.v-c-merchant-id\")",
					"    };",
					"",
					"var getHeaderHash = {",
					"      host : postman.getEnvironmentVariable(\"CYBERSOURCE.ENVIRONMENT\"),",
					"      date : curDate,",
					"      'request-target' : method + ' ' + targetUrl,",
					"      \"v-c-merchant-id\" : postman.getEnvironmentVariable(\"CYBERSOURCE.v-c-merchant-id\")",
					"    };",
					"    ",
					"var postConfig = {",
					"      algorithm : 'HmacSHA256',",
					"      keyid : environment['key-id'],",
					"      secretkey : environment['shared-secret'],",
					"      headers : [ 'host', 'date', 'request-target', 'digest', 'v-c-merchant-id' ]",
					"    };",
					"    ",
					"var getConfig = {",
					"      algorithm : 'HmacSHA256',",
					"      keyid : environment['key-id'],",
					"      secretkey : environment['shared-secret'],",
					"      headers : [ 'host', 'date', 'request-target', 'v-c-merchant-id' ]",
					"};",
					"",
					"var config = null;",
					"var headerHash = null;",
					"",
					"console.log(method + \" \" + targetUrl);",
					"",
					"  if (method === \"post\" || method === \"put\" || method === \"patch\"){",
					"    config = postConfig;",
					"    headerHash = postHeaderHash;",
					"  }",
					"  if(method === \"get\" || method === \"delete\"){",
					"    config = getConfig;",
					"    headerHash = getHeaderHash;",
					"  }",
					"console.log(\"Config:\", config);",
					"console.log(\"Headers:\", headerHash);",
					"",
					"var sig = computeHttpSignature(config, headerHash);",
					"",
					"postman.setEnvironmentVariable('httpsig', sig);",
					"postman.setEnvironmentVariable('computed-digest', computedDigest);",
					"postman.setEnvironmentVariable(\"current-date\", curDate);",
					"postman.setEnvironmentVariable(\"target-url\", targetUrl);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Successful request\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
					"});",
					""
				]
			}
		}
	]
}